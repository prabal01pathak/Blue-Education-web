# Generated by Django 3.2.9 on 2021-11-29 11:37

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('tests', '0016_auto_20211129_1655'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DSA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalElectronics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DBMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataScience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CyberSecurity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComputerNetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='COA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Q_No', models.IntegerField(default=0, help_text='increament every time for unique paper type')),
                ('description', tinymce.models.HTMLField()),
                ('type', models.CharField(choices=[('single', 'single'), ('write', 'write'), ('multiselect', 'multiselect')], default='single', help_text='Please enter your answerin option1 for write type questions', max_length=20)),
                ('option1', models.CharField(blank=True, max_length=500)),
                ('option2', models.CharField(blank=True, max_length=500)),
                ('option3', models.CharField(blank=True, max_length=500)),
                ('option4', models.CharField(blank=True, max_length=500)),
                ('difficulty', models.CharField(blank=True, choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marking', models.FloatField(blank=True, default=0, help_text='assigned marks for this questions if same as title leave it.')),
                ('minus_marking', models.FloatField(blank=True, default=0, help_text='assigned negative marks for every questions if same as title leave it.')),
                ('answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='A', max_length=100)),
                ('explanation', tinymce.models.HTMLField(blank=True, default='None')),
                ('paper_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.title')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
